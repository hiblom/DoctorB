#include "stdafx.h"
#include "Evaluator.h"
#include <algorithm>
#include "Constants.h"

using namespace std;

Evaluator::Evaluator(const Position& position) : position_(position) {
}

Evaluator::~Evaluator() {
}

int Evaluator::CompareScore(uint8_t color, Score score_1, Score score_2) {
	if (score_1.GetValue() == score_2.GetValue())
		return 0;

	return ((color == Piece::COLOR_WHITE) == (score_1.GetValue() > score_2.GetValue())) ? 1 : -1;
}

int Evaluator::GetMaterialCount() {
	int result = 0;
	for (uint8_t p = 0; p < 12; p++) {
		result += position_.GetPieceCount(Piece(p));
	}
	return result;
}

void Evaluator::Evaluate(Score& score) {
	int material_count = GetMaterialCount();

	//int64_t value = 0;
	int piece_value = 0;
	int start_piece_square_value = 0;
	int end_piece_square_value = 0;
	for (uint8_t p = 0; p < 12; p++) {
		BitBoard piece_board = position_.GetBitBoard(Piece(p));
		Square square;
		while (piece_board.PopLowestSquare(square)) {
			piece_value += Constants::PIECE_VALUES[p];
			start_piece_square_value += PIECE_SQUARE_START_VALUE[p][square.GetValue()];
			end_piece_square_value += PIECE_SQUARE_END_VALUE[p][square.GetValue()];
		}
	}

	// >>5 instead of /32
	int value = piece_value + ((start_piece_square_value * material_count + end_piece_square_value * (32 - material_count)) >> 5);
	//add random "noise" to prevent DoctorB from playing the same moves over and over
	//noise band = 0..4
	value += (rand() % 5);
	return score.SetValue(value);
}

const int Evaluator::PIECE_START_TOTAL_VALUE =
	16 * Constants::PIECE_VALUES[Piece::TYPE_PAWN | 1Ui8] +
	4 * Constants::PIECE_VALUES[Piece::TYPE_KNIGHT | 1Ui8] +
	4 * Constants::PIECE_VALUES[Piece::TYPE_BISHOP | 1Ui8] +
	4 * Constants::PIECE_VALUES[Piece::TYPE_ROOK | 1Ui8] +
	2 * Constants::PIECE_VALUES[Piece::TYPE_QUEEN | 1Ui8];

const int Evaluator::PIECE_SQUARE_START_VALUE[12][64] = {
	{//black pawn
	   0,   0,   0,   0,   0,   0,   0,   0,
	 -50, -50, -50, -50, -50, -50, -50, -50,
	 -10, -25, -25, -25, -25, -25, -25, -10,
	   0,   0, -25, -25, -25, -25,   0,   0,
	   0,   0,   0, -25, -25,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	  -5, -10, -10,  25,  25, -10, -10,  -5,
	   0,   0,   0,   0,   0,   0,   0,   0
	},
	{//white pawn
	   0,   0,   0,   0,   0,   0,   0,   0,
	   5,  10,  10, -25, -25,  10,  10,   5,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,  25,  25,   0,   0,   0,
	   0,   0,  25,  25,  25,  25,   0,   0,
	  10,  25,  25,  25,  25,  25,  25,  10,
	  50,  50,  50,  50,  50,  50,  50,  50,
	   0,   0,   0,   0,   0,   0,   0,   0
	},
	{//black knight
	  50,  25,  25,  25,  25,  25,  25,  50,
	  25,   0,   0,   0,   0,   0,   0,  25,
	  25, -25, -50, -50, -50, -50, -25,  25,
	  25,   0, -25, -25, -25, -25,   0,  25,
	  25,   0,   0,   0,   0,   0,   0,  25,
	  25,   0,   0,   0,   0,   0,   0,  25,
	  25,   0,   0,   0,   0,   0,   0,  25,
	  50,  25,  25,  25,  25,  25,  25,  50
	},
	{//white knight
	 -50, -25, -25, -25, -25, -25, -25, -50,
	 -25,   0,   0,   0,   0,   0,   0, -25,
	 -25,   0,   0,   0,   0,   0,   0, -25,
	 -25,   0,   0,   0,   0,   0,   0, -25,
	 -25,   0,  25,  25,  25,  25,   0, -25,
	 -25,  25,  50,  50,  50,  50,  25, -25,
	 -25,   0,   0,   0,   0,   0,   0, -25,
	 -50, -25, -25, -25, -25, -25, -25, -50
	},
	{//black bishop
	  25,  25,  25,  25,  25,  25,  25,  25,
	  25,   0,   0,   0,   0,   0,   0,  25,
	  25, -25, -25, -25, -25, -25, -25,  25,
	  25,   0, -25, -25, -25, -25,   0,  25,
	  25,   0, -25, -25, -25, -25,   0,  25,
	  25,   0, -25, -25, -25, -25,   0,  25,
	  25,   0,   0,   0,   0,   0,   0,  25,
	  25,  25,  25,  25,  25,  25,  25,  25
	},
	{//white bishop
	 -25, -25, -25, -25, -25, -25, -25, -25,
	 -25,   0,   0,   0,   0,   0,   0, -25,
	 -25,   0,  25,  25,  25,  25,   0, -25,
	 -25,   0,  25,  25,  25,  25,   0, -25,
	 -25,   0,  25,  25,  25,  25,   0, -25,
	 -25,  25,  25,  25,  25,  25,  25, -25,
	 -25,   0,   0,   0,   0,   0,   0, -25,
	 -25, -25, -25, -25, -25, -25, -25, -25
	},
	{//black rook
	 -25, -25, -25, -25, -25, -25, -25, -25,
	 -25, -25, -25, -25, -25, -25, -25, -25,
	   0,   0,   0,   0,   0,   0,   0,  0,
	  25,   0,   0,   0,   0,   0,   0,  25,
	  25,   0,   0,   0,   0,   0,   0,  25,
	  25,   0,   0,   0,   0,   0,   0,  25,
	  25,   0,   0,   0,   0,   0,   0,  25,
	  25,   0,   0, -10, -10,   0,   0,  25
	},
	{//white rook
	 -25,   0,   0,  10,  10,   0,   0, -25,
	 -25,   0,   0,   0,   0,   0,   0, -25,
	 -25,   0,   0,   0,   0,   0,   0, -25,
	 -25,   0,   0,   0,   0,   0,   0, -25,
	 -25,   0,   0,   0,   0,   0,   0, -25,
	   0,   0,   0,   0,   0,   0,   0,   0,
	  25,  25,  25,  25,  25,  25,  25,  25,
	  25,  25,  25,  25,  25,  25,  25,  25
	},
	{//black queen
	   0, -25, -25, -25, -25, -25, -25,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	  25,  25,  25,  25,  25,  25,  25,  25
	},
	{//white queen
	  25,  25,  25,  25,  25,  25,  25,  25,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0, -25, -25, -25, -25, -25, -25,   0
	},
	{//black king
	  50,  50,  50,  50,  50,  50,  50,  50,
	  50,  50,  50,  50,  50,  50,  50,  50,
	  50,  50,  50,  50,  50,  50,  50,  50,
	  50,  50,  50,  50,  50,  50,  50,  50,
	  50,  50,  50,  50,  50,  50,  50,  50,
	  50,  50,  50,  50,  50,  50,  50,  50,
	  10,  10,  10,  50,  50,  10,  10,  10,
	 -10, -25, -25,   0,   0,   0, -25, -10
	},
	{ //white king
	  10,  25,  25,   0,   0,   0,  25,  10,
	 -10, -10, -10, -50, -50, -10, -10, -10,
	 -50, -50, -50, -50, -50, -50, -50, -50,
	 -50, -50, -50, -50, -50, -50, -50, -50,
	 -50, -50, -50, -50, -50, -50, -50, -50,
	 -50, -50, -50, -50, -50, -50, -50, -50,
	 -50, -50, -50, -50, -50, -50, -50, -50,
	 -50, -50, -50, -50, -50, -50, -50, -50
	}
};

const int Evaluator::PIECE_SQUARE_END_VALUE[12][64] = {
	{//black pawn
	   0,   0,   0,   0,   0,   0,   0,   0,
	-150,-150,-150,-150,-150,-150,-150,-150,
	 -75, -75, -75, -75, -75, -75, -75, -75,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0
	},
	{//white pawn
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	  75,  75,  75,  75,  75,  75,  75,  75,
	 150, 150, 150, 150, 150, 150, 150, 150,
	   0,   0,   0,   0,   0,   0,   0,   0
	},
	{//black knight
	  50,  25,  25,  25,  25,  25,  25,  50,
	  25,   0,   0,   0,   0,   0,   0,  25,
	  25,   0, -25, -25, -25, -25,   0,  25,
	  25,   0, -25, -25, -25, -25,   0,  25,
	  25,   0, -25, -25, -25, -25,   0,  25,
	  25,   0, -25, -25, -25, -25,   0,  25,
	  25,   0,   0,   0,   0,   0,   0,  25,
	  50,  25,  25,  25,  25,  25,  25,  50
	},
	{//white knight
	 -50, -25, -25, -25, -25, -25, -25, -50,
	 -25,   0,   0,   0,   0,   0,   0, -25,
	 -25,   0,  25,  25,  25,  25,   0, -25,
	 -25,   0,  25,  25,  25,  25,   0, -25,
	 -25,   0,  25,  25,  25,  25,   0, -25,
	 -25,   0,  25,  25,  25,  25,   0, -25,
	 -25,   0,   0,   0,   0,   0,   0, -25,
	 -50, -25, -25, -25, -25, -25, -25, -50
	},
	{//black bishop
	  25,   0,   0,   0,   0,   0,   0,  25,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	  25,   0,   0,   0,   0,   0,   0,  25
	},
	{//white bishop
	 -25,   0,   0,   0,   0,   0,   0, -25,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	 -25,   0,   0,   0,   0,   0,   0, -25
	},
	{//black rook
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	},
	{//white rook
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	},
	{//black queen
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	},
	{//white queen
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	},
	{//black king
	  25,   0,   0,   0,   0,   0,   0,  25,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	  25,   0,   0,   0,   0,   0,   0,  25
	},
	{ //white king
	 -25,   0,   0,   0,   0,   0,   0, -25,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	 -25,   0,   0,   0,   0,   0,   0, -25
	}
};